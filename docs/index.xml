<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Learn to Code</title>
    <link>https://pengchuanc.github.io/</link>
    <description>Recent content on Learn to Code</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Fri, 23 Apr 2021 14:17:25 +0800</lastBuildDate><atom:link href="https://pengchuanc.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python利用Consul实现服务发现</title>
      <link>https://pengchuanc.github.io/posts/consul/</link>
      <pubDate>Fri, 23 Apr 2021 14:17:25 +0800</pubDate>
      
      <guid>https://pengchuanc.github.io/posts/consul/</guid>
      <description>1.背景 由于基金筛选系统和组合管理系统间存在一些互相需要使用到的基础数据，但又不想重复创建数据库表单和同步数据，因此在两个项目中使用了grp</description>
    </item>
    
    <item>
      <title>MariaDB 升级后无法运行</title>
      <link>https://pengchuanc.github.io/posts/mariadb-upgrade/</link>
      <pubDate>Wed, 24 Feb 2021 10:15:21 +0800</pubDate>
      
      <guid>https://pengchuanc.github.io/posts/mariadb-upgrade/</guid>
      <description>1.事情起因 在redhat每次执行完yun update后，MariaDB也会升级，但我之前更换过MariaDB的数据存储目录，将数据保存在了</description>
    </item>
    
    <item>
      <title>Mariadb(MySQL)初始配置</title>
      <link>https://pengchuanc.github.io/posts/mariadb-init/</link>
      <pubDate>Thu, 04 Feb 2021 17:05:55 +0800</pubDate>
      
      <guid>https://pengchuanc.github.io/posts/mariadb-init/</guid>
      <description>数据库各项配置主要在/etc/my.cnf文件中修改。 1.数据库存放位置 安装完MariaDB后，数据资源一般默认存放在/var/lib/my</description>
    </item>
    
    <item>
      <title>常用Linux命令</title>
      <link>https://pengchuanc.github.io/posts/linux_most_used_command/</link>
      <pubDate>Wed, 06 Jan 2021 15:22:11 +0800</pubDate>
      
      <guid>https://pengchuanc.github.io/posts/linux_most_used_command/</guid>
      <description>任务中止 1.中止多进程任务 假设任务名为 qcluster ps aux|grep qcluster|grep -v grep|cut -c 9-15|xargs kill -9</description>
    </item>
    
    <item>
      <title>Python中使用JWT</title>
      <link>https://pengchuanc.github.io/posts/python-jwt/</link>
      <pubDate>Mon, 21 Dec 2020 11:18:59 +0800</pubDate>
      
      <guid>https://pengchuanc.github.io/posts/python-jwt/</guid>
      <description>在前后端分离的web项目中，后端一般采用Restful Api，这种模式的后端是无状态的， 不便再使用Session这种传统的认证方式，一般采用</description>
    </item>
    
    <item>
      <title>Python利用Manager在分布式进程间进行通信</title>
      <link>https://pengchuanc.github.io/posts/python-manager/</link>
      <pubDate>Thu, 17 Dec 2020 11:01:25 +0800</pubDate>
      
      <guid>https://pengchuanc.github.io/posts/python-manager/</guid>
      <description>在具有亲缘的多进程程序中，通常可用使用queue、pipe等数据结构来进行数据共享和传递消息，但在分布式进程中，进程间的通信还需要依靠网络来</description>
    </item>
    
    <item>
      <title>Python使用装饰器来实现重试</title>
      <link>https://pengchuanc.github.io/posts/python-class-decorator/</link>
      <pubDate>Tue, 15 Dec 2020 10:09:06 +0800</pubDate>
      
      <guid>https://pengchuanc.github.io/posts/python-class-decorator/</guid>
      <description>在之前使用grpc的项目中偶尔会遇到连接时间过久，tcp连接断掉的情况，于是尝试写一个装饰器来实现自动重连3次，即最大尝试4次连接。 主要使用</description>
    </item>
    
    <item>
      <title>Python中使用UDP来推送数据</title>
      <link>https://pengchuanc.github.io/posts/python-udp/</link>
      <pubDate>Fri, 11 Dec 2020 16:41:32 +0800</pubDate>
      
      <guid>https://pengchuanc.github.io/posts/python-udp/</guid>
      <description>1.UDP简介 UDP协议（User Datagram Protocol）中文名称是用户数据报协议，是OSI（Open System Interconnection，开放式系</description>
    </item>
    
    <item>
      <title>Python中的str类型和int数组类型转换</title>
      <link>https://pengchuanc.github.io/posts/python-bytes-str/</link>
      <pubDate>Thu, 10 Dec 2020 09:42:59 +0800</pubDate>
      
      <guid>https://pengchuanc.github.io/posts/python-bytes-str/</guid>
      <description>在编程语言中，string类型往往是通过int数组来实现的，在python中，str和int[]同样可以转换 1.str转bytes 将字符串转</description>
    </item>
    
    <item>
      <title>通过grpc服务上传下载大型文件(Python)</title>
      <link>https://pengchuanc.github.io/posts/grpc_stream_python/</link>
      <pubDate>Wed, 09 Dec 2020 15:49:54 +0800</pubDate>
      
      <guid>https://pengchuanc.github.io/posts/grpc_stream_python/</guid>
      <description>传统文件的下载方式主要使用tcp服务，这种功能同样可以使用grpc的stream来实现，通过使用流(streaming)，可以向服务器或者客</description>
    </item>
    
  </channel>
</rss>
